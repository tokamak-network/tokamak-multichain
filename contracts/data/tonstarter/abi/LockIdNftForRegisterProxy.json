{
  "address": "0x4b3fB26396C6740341cB36E2D3325b1163421385",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousManager",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newManager",
          "type": "address"
        }
      ],
      "name": "ManagershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "impl",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "alive",
          "type": "bool"
        }
      ],
      "name": "SetAliveImplementation",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes4",
          "name": "selector",
          "type": "bytes4"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "impl",
          "type": "address"
        }
      ],
      "name": "SetSelectorImplementation",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "implementation",
          "type": "address"
        }
      ],
      "name": "Upgraded",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MULTIPLIER",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_ERC721_RECEIVED",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_INTERFACE_ID_ERC721",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_INTERFACE_ID_ERC721_ENUMERABLE",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_INTERFACE_ID_ERC721_METADATA",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "_allTokens",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "_allTokensIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_baseURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_manager",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "_operatorApprovals",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "_ownedTokens",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "_ownedTokensCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "_ownedTokensIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "_tokenApprovals",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "_tokenAttributes",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "_tokenOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "_tokenURIs",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "aliveImplementation",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "epochUnit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "_selector",
          "type": "bytes4"
        }
      ],
      "name": "getSelectorImplementation2",
      "outputs": [
        {
          "internalType": "address",
          "name": "impl",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "implementation",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "implementation2",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "indexCheckOfTimeset",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "indexOfTimeset",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pauseProxy",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "pointHistoryByLockId",
      "outputs": [
        {
          "internalType": "int256",
          "name": "slope",
          "type": "int256"
        },
        {
          "internalType": "int256",
          "name": "bias",
          "type": "int256"
        },
        {
          "internalType": "uint32",
          "name": "timestamp",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "syncTime",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "pointHistoryByWeek",
      "outputs": [
        {
          "internalType": "int256",
          "name": "slope",
          "type": "int256"
        },
        {
          "internalType": "int256",
          "name": "bias",
          "type": "int256"
        },
        {
          "internalType": "uint32",
          "name": "timestamp",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "syncTime",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "proxyImplementation",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceManagership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "name": "selectorImplementation",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newImplementation",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_alive",
          "type": "bool"
        }
      ],
      "name": "setAliveImplementation2",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newImplementation",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_alive",
          "type": "bool"
        }
      ],
      "name": "setImplementation2",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_pause",
          "type": "bool"
        }
      ],
      "name": "setProxyPause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4[]",
          "name": "_selectors",
          "type": "bytes4[]"
        },
        {
          "internalType": "address",
          "name": "_imp",
          "type": "address"
        }
      ],
      "name": "setSelectorImplementations2",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newManager",
          "type": "address"
        }
      ],
      "name": "transferManagership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "impl",
          "type": "address"
        }
      ],
      "name": "upgradeTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_implementation",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "upgradeToAndCall",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xe65efb97a2264bda18ab952fa73ccffae60b73fc34bafa8854eaca6a6f7f70e0",
  "receipt": {
    "to": null,
    "from": "0xc1eba383D94c6021160042491A5dfaF1d82694E6",
    "contractAddress": "0x4b3fB26396C6740341cB36E2D3325b1163421385",
    "transactionIndex": 0,
    "gasUsed": "1616626",
    "logsBloom": "0x
    "blockHash": "0x088c761ff2a971db68b091139b540b95022d669895202db6e29adba971777d22",
    "transactionHash": "0xe65efb97a2264bda18ab952fa73ccffae60b73fc34bafa8854eaca6a6f7f70e0",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 23636,
        "transactionHash": "0xe65efb97a2264bda18ab952fa73ccffae60b73fc34bafa8854eaca6a6f7f70e0",
        "address": "0x4b3fB26396C6740341cB36E2D3325b1163421385",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000c1eba383d94c6021160042491a5dfaf1d82694e6"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0x088c761ff2a971db68b091139b540b95022d669895202db6e29adba971777d22"
      }
    ],
    "blockNumber": 23636,
    "cumulativeGasUsed": "1616626",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "0947a7a1e820c0246f32ef48593665d8",
  "metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousManager\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newManager\",\"type\":\"address\"}],\"name\":\"ManagershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"impl\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"alive\",\"type\":\"bool\"}],\"name\":\"SetAliveImplementation\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"impl\",\"type\":\"address\"}],\"name\":\"SetSelectorImplementation\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MULTIPLIER\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_ERC721_RECEIVED\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_INTERFACE_ID_ERC721\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_INTERFACE_ID_ERC721_ENUMERABLE\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_INTERFACE_ID_ERC721_METADATA\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_allTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_allTokensIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_baseURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_manager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"_operatorApprovals\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_ownedTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"_ownedTokensCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_ownedTokensIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_tokenApprovals\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_tokenAttributes\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_tokenOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_tokenURIs\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"aliveImplementation\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"epochUnit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_selector\",\"type\":\"bytes4\"}],\"name\":\"getSelectorImplementation2\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"impl\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"implementation2\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"indexCheckOfTimeset\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"indexOfTimeset\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pauseProxy\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"pointHistoryByLockId\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"slope\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"bias\",\"type\":\"int256\"},{\"internalType\":\"uint32\",\"name\":\"timestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"syncTime\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"pointHistoryByWeek\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"slope\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"bias\",\"type\":\"int256\"},{\"internalType\":\"uint32\",\"name\":\"timestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"syncTime\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"proxyImplementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceManagership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"name\":\"selectorImplementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_alive\",\"type\":\"bool\"}],\"name\":\"setAliveImplementation2\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_alive\",\"type\":\"bool\"}],\"name\":\"setImplementation2\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_pause\",\"type\":\"bool\"}],\"name\":\"setProxyPause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4[]\",\"name\":\"_selectors\",\"type\":\"bytes4[]\"},{\"internalType\":\"address\",\"name\":\"_imp\",\"type\":\"address\"}],\"name\":\"setSelectorImplementations2\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newManager\",\"type\":\"address\"}],\"name\":\"transferManagership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"impl\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_implementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getSelectorImplementation2(bytes4)\":{\"details\":\"view implementation address of selector of function\",\"params\":{\"_selector\":\"selector of function\"},\"returns\":{\"impl\":\"address of the implementation\"}},\"implementation()\":{\"details\":\"returns the implementation\"},\"implementation2(uint256)\":{\"details\":\"view implementation address of the proxy[index]\",\"params\":{\"_index\":\"index of proxy\"},\"returns\":{\"_0\":\"address of the implementation\"}},\"setAliveImplementation2(address,bool)\":{\"details\":\"set alive status of implementation\",\"params\":{\"_alive\":\"alive status\",\"newImplementation\":\"Address of the new implementation.\"}},\"setImplementation2(address,uint256,bool)\":{\"details\":\"set the implementation address and status of the proxy[index]\",\"params\":{\"_alive\":\"_alive\",\"_index\":\"index\",\"newImplementation\":\"Address of the new implementation.\"}},\"setProxyPause(bool)\":{\"params\":{\"_pause\":\"true:pause or false:resume\"}},\"setSelectorImplementations2(bytes4[],address)\":{\"details\":\"set selectors of Implementation\",\"params\":{\"_imp\":\"implementation address\",\"_selectors\":\"being added selectors\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}. Time complexity O(1), guaranteed to always use less than 30 000 gas.\"},\"upgradeTo(address)\":{\"params\":{\"impl\":\"New implementation contract address\"}},\"upgradeToAndCall(address,bytes)\":{\"params\":{\"_data\":\"Calldata to delegatecall the new implementation with.\",\"_implementation\":\"Address of the implementation contract.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"setProxyPause(bool)\":{\"notice\":\"Set pause state\"},\"upgradeTo(address)\":{\"notice\":\"Set implementation contract\"},\"upgradeToAndCall(address,bytes)\":{\"notice\":\"Set the implementation and call a function in a single transaction. Useful to ensure         atomic execution of initialization-based upgrades.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/stos/LockIdNftForRegisterProxy.sol\":\"LockIdNftForRegisterProxy\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":625},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\"},\"contracts/interfaces/IIERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\npragma solidity ^0.8.9;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IIERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x909bdc2f1c48c72997c2d1ad227701a6d46157345692f3486673e591f698c476\",\"license\":\"MIT\"},\"contracts/interfaces/IProxyAction.sol\":{\"content\":\"//SPDX-License-Identifier: Unlicense\\npragma solidity ^0.8.4;\\n\\n\\n/// @title IProxyAction\\ninterface IProxyAction {\\n\\n    /// @dev set the implementation address and status of the proxy[index]\\n    /// @param newImplementation Address of the new implementation.\\n    /// @param _index index\\n    /// @param _alive _alive\\n    function setImplementation2(\\n        address newImplementation,\\n        uint256 _index,\\n        bool _alive\\n    ) external;\\n\\n\\n    /// @dev set alive status of implementation\\n    /// @param newImplementation Address of the new implementation.\\n    /// @param _alive alive status\\n    function setAliveImplementation2(address newImplementation, bool _alive)\\n        external;\\n\\n\\n    /// @dev set selectors of Implementation\\n    /// @param _selectors being added selectors\\n    /// @param _imp implementation address\\n    function setSelectorImplementations2(\\n        bytes4[] calldata _selectors,\\n        address _imp\\n    ) external  ;\\n\\n\\n\\n    /// onlyOwner\\n\\n    /// @notice Set pause state\\n    /// @param _pause true:pause or false:resume\\n    function setProxyPause(bool _pause) external ;\\n\\n\\n    /// anybody\\n\\n    /// @dev view implementation address of selector of function\\n    /// @param _selector selector of function\\n    /// @return impl address of the implementation\\n    function getSelectorImplementation2(bytes4 _selector)\\n        external\\n        view\\n        returns (address impl);\\n\\n\\n    /// @dev view implementation address of the proxy[index]\\n    /// @param _index index of proxy\\n    /// @return address of the implementation\\n    function implementation2(uint256 _index) external view returns (address) ;\\n}\\n\\n\",\"keccak256\":\"0x16ff956d9ccccadd56ce168390a7daa64883fda68f00dbf5110ae67bceaa6fcb\",\"license\":\"Unlicense\"},\"contracts/interfaces/IProxyEvent.sol\":{\"content\":\"//SPDX-License-Identifier: Unlicense\\npragma solidity ^0.8.4;\\n\\n\\n/// @title IProxyEvent\\ninterface IProxyEvent {\\n\\n    event Upgraded(address indexed implementation);\\n\\n    event SetAliveImplementation(address indexed impl, bool alive);\\n    event SetSelectorImplementation(bytes4 indexed selector, address indexed impl);\\n\\n\\n}\\n\",\"keccak256\":\"0x2a1e50808aa448c7a64fdea7ab2a7a2aa614e66ce974cc9e081bb70187716754\",\"license\":\"Unlicense\"},\"contracts/libraries/LibLockId.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\n/**\\n * @title LibLockId\\n */\\nlibrary LibLockId {\\n\\n    // LockId\\uc758 \\ud3ec\\uc778\\ud2b8 \\uc815\\ubcf4\\n    struct Point {\\n        int256 slope;\\n        int256 bias;\\n        uint256 timestamp; // \\ub4f1\\ub85d(\\uc2dc\\uc791)\\uc2dc\\uc810\\n    }\\n\\n    // LockId\\uc758 \\uc794\\uace0\\n    struct LockedInfo {\\n        uint256 start;\\n        uint256 end;\\n        uint256 amount;\\n        uint256 withdrawlTime;\\n    }\\n\\n    // SyncInfo\\n    struct SyncInfo {\\n        int256 slope;\\n        int256 bias;\\n        uint32 timestamp; // point \\uc815\\ubcf4\\uc5d0 \\uc788\\ub294 \\uc778\\ub371\\uc2a4\\uc5d0 \\ud574\\ub2f9\\ud558\\ub294 timestamp\\n        uint32 syncTime; // \\ub3d9\\uae30\\ud654 \\uc2dc\\uc810\\n    }\\n\\n    struct SyncPacket {\\n        uint256 lockId;\\n        SyncInfo packet;\\n    }\\n\\n    struct UnlimitedAmount {\\n        uint32 timestamp;\\n        uint256 amount;\\n    }\\n\\n}\",\"keccak256\":\"0xf1a7a0153b2bd0a20c1dd536adfa44e1c7c3dc7336a37eef2e3166c44285792e\",\"license\":\"MIT\"},\"contracts/proxy/Proxy2.sol\":{\"content\":\"//SPDX-License-Identifier: Unlicense\\npragma solidity ^0.8.4;\\n\\nimport \\\"./ProxyStorage2.sol\\\";\\n\\nimport {Address} from \\\"@openzeppelin/contracts/utils/Address.sol\\\";\\n\\nimport \\\"../interfaces/IProxyEvent.sol\\\";\\nimport \\\"../interfaces/IProxyAction.sol\\\";\\n// import \\\"hardhat/console.sol\\\";\\n\\ncontract Proxy2 is ProxyStorage2, IProxyEvent, IProxyAction\\n{\\n\\n    /* ========== DEPENDENCIES ========== */\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    modifier onlyOwner() {\\n        require(_owner == msg.sender, \\\"not owner\\\");\\n        _;\\n    }\\n\\n    /* ========== CONSTRUCTOR ========== */\\n    constructor () {\\n        _owner = msg.sender;\\n        emit OwnershipTransferred(address(0), _owner);\\n    }\\n\\n    /* ========== onlyOwner ========== */\\n\\n    function renounceOwnership() external onlyOwner {\\n        emit OwnershipTransferred(_owner, address(0));\\n        _owner = address(0);\\n    }\\n\\n    function transferOwnership(address newOwner) external onlyOwner {\\n        require(newOwner != address(0), \\\"new owner is the zero address\\\");\\n        emit OwnershipTransferred(_owner, newOwner);\\n        _owner = newOwner;\\n    }\\n\\n    /// @inheritdoc IProxyAction\\n    function setProxyPause(bool _pause) external onlyOwner {\\n        pauseProxy = _pause;\\n    }\\n\\n    /// @notice Set implementation contract\\n    /// @param impl New implementation contract address\\n    function upgradeTo(address impl) external onlyOwner {\\n        require(impl != address(0), \\\"input is zero\\\");\\n        require(\\n            _implementation2(0) != impl,\\n            \\\"same addr\\\"\\n        );\\n        _setImplementation2(impl, 0, true);\\n        emit Upgraded(impl);\\n    }\\n\\n    /**\\n     * @notice Set the implementation and call a function in a single transaction. Useful to ensure\\n     *         atomic execution of initialization-based upgrades.\\n     *\\n     * @param _implementation Address of the implementation contract.\\n     * @param _data           Calldata to delegatecall the new implementation with.\\n     */\\n    function upgradeToAndCall(address _implementation, bytes calldata _data)\\n        public\\n        payable\\n        virtual\\n        onlyOwner\\n        returns (bytes memory)\\n    {\\n        // _setImplementation(_implementation);\\n        _setImplementation2(_implementation, 0, true);\\n\\n        (bool success, bytes memory returndata) = _implementation.delegatecall(_data);\\n        require(success, \\\"Proxy: delegatecall to new implementation contract failed\\\");\\n        return returndata;\\n    }\\n\\n    /// @inheritdoc IProxyAction\\n    function setImplementation2(\\n        address newImplementation,\\n        uint256 _index,\\n        bool _alive\\n    ) external override onlyOwner {\\n        _setImplementation2(newImplementation, _index, _alive);\\n    }\\n\\n    /// @inheritdoc IProxyAction\\n    function setAliveImplementation2(address newImplementation, bool _alive)\\n        public override onlyOwner\\n    {\\n        _setAliveImplementation2(newImplementation, _alive);\\n    }\\n\\n    /// @inheritdoc IProxyAction\\n    function setSelectorImplementations2(\\n        bytes4[] calldata _selectors,\\n        address _imp\\n    ) public override onlyOwner {\\n        require(\\n            _selectors.length > 0,\\n            \\\"Proxy: _selectors's size is zero\\\"\\n        );\\n        require(aliveImplementation[_imp], \\\"Proxy: _imp is not alive\\\");\\n\\n        for (uint256 i = 0; i < _selectors.length; i++) {\\n            require(\\n                selectorImplementation[_selectors[i]] != _imp,\\n                \\\"LiquidityVaultProxy: same imp\\\"\\n            );\\n            selectorImplementation[_selectors[i]] = _imp;\\n            emit SetSelectorImplementation(_selectors[i], _imp);\\n        }\\n    }\\n\\n    /* ========== Anyone can   ========== */\\n\\n\\n\\n    /* ========== VIEW ========== */\\n\\n    /// @dev returns the implementation\\n    function implementation() external view returns (address) {\\n        return _implementation2(0);\\n    }\\n\\n    /// @inheritdoc IProxyAction\\n    function implementation2(uint256 _index) external override view returns (address) {\\n        return _implementation2(_index);\\n    }\\n\\n\\n    /// @inheritdoc IProxyAction\\n    function getSelectorImplementation2(bytes4 _selector)\\n        public override\\n        view\\n        returns (address impl)\\n    {\\n        if (selectorImplementation[_selector] == address(0))\\n            return proxyImplementation[0];\\n        else if (aliveImplementation[selectorImplementation[_selector]]){\\n            return selectorImplementation[_selector];\\n        }\\n        else return proxyImplementation[0];\\n    }\\n\\n\\n    /// @dev receive ether\\n    receive() external payable {\\n        revert(\\\"cannot receive Ether\\\");\\n    }\\n\\n    /// @dev fallback function , execute on undefined function call\\n    fallback() external payable {\\n        _fallback();\\n    }\\n\\n    /* === ======= internal ========== */\\n\\n    /// @dev view implementation address of the proxy[index]\\n    /// @param _index index of proxy\\n    /// @return impl address of the implementation\\n    function _implementation2(uint256 _index)\\n        internal\\n        view\\n        returns (address impl)\\n    {\\n        return proxyImplementation[_index];\\n    }\\n\\n    /// @dev fallback function , execute on undefined function call\\n    function _fallback() internal {\\n        address _impl = getSelectorImplementation2(msg.sig);\\n\\n        require(\\n            _impl != address(0) && !pauseProxy,\\n            \\\"Proxy: impl OR proxy is false\\\"\\n        );\\n\\n        assembly {\\n            // Copy msg.data. We take full control of memory in this inline assembly\\n            // block because it will not return to Solidity code. We overwrite the\\n            // Solidity scratch pad at memory position 0.\\n            calldatacopy(0, 0, calldatasize())\\n\\n            // Call the implementation.\\n            // out and outsize are 0 because we don't know the size yet.\\n            let result := delegatecall(gas(), _impl, 0, calldatasize(), 0, 0)\\n\\n            // Copy the returned data.\\n            returndatacopy(0, 0, returndatasize())\\n\\n            switch result\\n                // delegatecall returns 0 on error.\\n                case 0 {\\n                    revert(0, returndatasize())\\n                }\\n                default {\\n                    return(0, returndatasize())\\n                }\\n        }\\n    }\\n\\n    /// @dev set the implementation address and status of the proxy[index]\\n    /// @param newImplementation Address of the new implementation.\\n    /// @param _index index of proxy\\n    /// @param _alive alive status\\n    function _setImplementation2(\\n        address newImplementation,\\n        uint256 _index,\\n        bool _alive\\n    ) internal {\\n        require(\\n            Address.isContract(newImplementation),\\n            \\\"Proxy: not contract address\\\"\\n        );\\n        if (_alive) proxyImplementation[_index] = newImplementation;\\n        _setAliveImplementation2(newImplementation, _alive);\\n    }\\n\\n    /// @dev set alive status of implementation\\n    /// @param newImplementation Address of the new implementation.\\n    /// @param _alive alive status\\n    function _setAliveImplementation2(address newImplementation, bool _alive)\\n        internal\\n    {\\n        aliveImplementation[newImplementation] = _alive;\\n        emit SetAliveImplementation(newImplementation, _alive);\\n    }\\n\\n}\",\"keccak256\":\"0x7d0a7c4411d5aba121d4afe73effde4df0c418aa2a3be22400058104ec1fab50\",\"license\":\"Unlicense\"},\"contracts/proxy/ProxyStorage2.sol\":{\"content\":\"//SPDX-License-Identifier: Unlicense\\npragma solidity ^0.8.4;\\n\\ncontract ProxyStorage2  {\\n\\n    address public _owner;\\n    bool public pauseProxy;\\n\\n    mapping(uint256 => address) public proxyImplementation;\\n    mapping(address => bool) public aliveImplementation;\\n    mapping(bytes4 => address) public selectorImplementation;\\n\\n\\n}\",\"keccak256\":\"0x143792b4a69ee77d8ac3bf521938acc34f9e6800751d4db9bae90333b4749a4a\",\"license\":\"Unlicense\"},\"contracts/stos/ERC165P.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.9;\\n\\nimport \\\"../interfaces/IIERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts may inherit from this and call {_registerInterface} to declare\\n * their support of an interface.\\n */\\ncontract ERC165P is IIERC165 {\\n    /*\\n     * bytes4(keccak256('supportsInterface(bytes4)')) == 0x01ffc9a7\\n     */\\n    bytes4 private constant _INTERFACE_ID_ERC165 = 0x01ffc9a7;\\n\\n    /**\\n     * @dev Mapping of interface ids to whether or not it's supported.\\n     */\\n    mapping(bytes4 => bool) internal _supportedInterfaces;\\n\\n    constructor () {\\n        // Derived contracts need only register support for their own interfaces,\\n        // we register support for ERC165 itself here\\n        _registerInterface(_INTERFACE_ID_ERC165);\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     *\\n     * Time complexity O(1), guaranteed to always use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\\n        return _supportedInterfaces[interfaceId];\\n    }\\n\\n    /**\\n     * @dev Registers the contract as an implementer of the interface defined by\\n     * `interfaceId`. Support of the actual ERC165 interface is automatic and\\n     * registering its interface id is not required.\\n     *\\n     * See {IERC165-supportsInterface}.\\n     *\\n     * Requirements:\\n     *\\n     * - `interfaceId` cannot be the ERC165 invalid interface (`0xffffffff`).\\n     */\\n    function _registerInterface(bytes4 interfaceId) internal virtual {\\n        require(interfaceId != 0xffffffff, \\\"ERC165: invalid interface id\\\");\\n        _supportedInterfaces[interfaceId] = true;\\n    }\\n}\",\"keccak256\":\"0x005572f46a5db276ca3af9344099070a4d8070456e313e20048ce6eca9619550\",\"license\":\"MIT\"},\"contracts/stos/LockIdNftForRegisterProxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"../proxy/Proxy2.sol\\\";\\nimport \\\"./LockIdRegisterStorage1.sol\\\";\\nimport \\\"./LockIdRegisterStorage2.sol\\\";\\n\\ncontract LockIdNftForRegisterProxy is Proxy2, LockIdRegisterStorage1, LockIdRegisterStorage2\\n{\\n    event ManagershipTransferred(address indexed previousManager, address indexed newManager);\\n\\n    constructor() {\\n        _manager = msg.sender;\\n    }\\n\\n    function renounceManagership() external onlyManager {\\n        emit ManagershipTransferred(_manager, address(0));\\n        _manager = address(0);\\n    }\\n\\n    function transferManagership(address newManager) external onlyManager {\\n        require(newManager != address(0), \\\"new manager is the zero address\\\");\\n        emit ManagershipTransferred(_manager, newManager);\\n        _manager = newManager;\\n    }\\n\\n}\\n\",\"keccak256\":\"0x5c6c0500f2a14a475e32e8401287110a02b30bb1d41f1ac6ef4a07d9ef91e956\",\"license\":\"MIT\"},\"contracts/stos/LockIdRegisterStorage1.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.9;\\n\\nimport \\\"./ERC165P.sol\\\";\\n\\ncontract LockIdRegisterStorage1 is ERC165P {\\n\\n    // Equals to `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`\\n    // which can be also obtained as `IERC721Receiver(0).onERC721Received.selector`\\n    bytes4 public constant _ERC721_RECEIVED = 0x150b7a02;\\n\\n    address public _manager;\\n\\n    // Token name\\n    string public _name;\\n\\n    // Token symbol\\n    string public _symbol;\\n\\n    // Optional mapping for token URIs\\n    mapping (uint256 => string) public _tokenURIs;\\n\\n    // attributes\\n    mapping (uint256 => uint8) public _tokenAttributes;\\n\\n    // Base URI\\n    string public _baseURI;\\n\\n    // Mapping from token ID to owner\\n    mapping (uint256 => address) public _tokenOwner; // _owners\\n\\n    // Mapping from token ID to approved address\\n    mapping (uint256 => address) public _tokenApprovals;\\n\\n    // Mapping from owner to number of owned token\\n    mapping (address => uint256) public _ownedTokensCount; // _balances\\n\\n    // Mapping from owner to operator approvals\\n    mapping (address => mapping (address => bool)) public _operatorApprovals;\\n\\n    // Mapping from owner to list of owned token IDs\\n    mapping(address => uint256[]) public _ownedTokens;\\n\\n    // Mapping from token ID to index of the owner tokens list\\n    mapping(uint256 => uint256) public _ownedTokensIndex;\\n\\n    // Array with all token ids, used for enumeration\\n    uint256[] public _allTokens;\\n\\n    // Mapping from token id to position in the allTokens array\\n    mapping(uint256 => uint256) public _allTokensIndex;\\n\\n    bool internal _lock;\\n\\n    /*\\n     *     bytes4(keccak256('balanceOf(address)')) == 0x70a08231\\n     *     bytes4(keccak256('ownerOf(uint256)')) == 0x6352211e\\n     *     bytes4(keccak256('approve(address,uint256)')) == 0x095ea7b3\\n     *     bytes4(keccak256('getApproved(uint256)')) == 0x081812fc\\n     *     bytes4(keccak256('setApprovalForAll(address,bool)')) == 0xa22cb465\\n     *     bytes4(keccak256('isApprovedForAll(address,address)')) == 0xe985e9c5\\n     *     bytes4(keccak256('transferFrom(address,address,uint256)')) == 0x23b872dd\\n     *     bytes4(keccak256('safeTransferFrom(address,address,uint256)')) == 0x42842e0e\\n     *     bytes4(keccak256('safeTransferFrom(address,address,uint256,bytes)')) == 0xb88d4fde\\n     *\\n     *     => 0x70a08231 ^ 0x6352211e ^ 0x095ea7b3 ^ 0x081812fc ^\\n     *        0xa22cb465 ^ 0xe985e9c5 ^ 0x23b872dd ^ 0x42842e0e ^ 0xb88d4fde == 0x80ac58cd\\n     */\\n    bytes4 public constant _INTERFACE_ID_ERC721 = 0x80ac58cd;\\n\\n    /*\\n     *     bytes4(keccak256('name()')) == 0x06fdde03\\n     *     bytes4(keccak256('symbol()')) == 0x95d89b41\\n     *     bytes4(keccak256('tokenURI(uint256)')) == 0xc87b56dd\\n     *\\n     *     => 0x06fdde03 ^ 0x95d89b41 ^ 0xc87b56dd == 0x5b5e139f\\n     */\\n    bytes4 public constant _INTERFACE_ID_ERC721_METADATA = 0x5b5e139f;\\n\\n    /*\\n     *     bytes4(keccak256('totalSupply()')) == 0x18160ddd\\n     *     bytes4(keccak256('tokenOfOwnerByIndex(address,uint256)')) == 0x2f745c59\\n     *     bytes4(keccak256('tokenByIndex(uint256)')) == 0x4f6ccce7\\n     *\\n     *     => 0x18160ddd ^ 0x2f745c59 ^ 0x4f6ccce7 == 0x780e9d63\\n     */\\n    bytes4 public constant _INTERFACE_ID_ERC721_ENUMERABLE = 0x780e9d63;\\n\\n    modifier onlyManager() {\\n        require(_manager == msg.sender, \\\"not manager\\\");\\n        _;\\n    }\\n\\n    modifier ifFree {\\n        require(_lock != true, \\\"in use\\\");\\n        _lock = true;\\n        _;\\n        _lock = false;\\n    }\\n\\n}\\n\",\"keccak256\":\"0x0e118a0aefaed57730214886764cb517b3aa4ef67da8b64388f68ba31fe5e740\",\"license\":\"MIT\"},\"contracts/stos/LockIdRegisterStorage2.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.9;\\n\\nimport \\\"../libraries//LibLockId.sol\\\";\\n\\ncontract LockIdRegisterStorage2 {\\n\\n    uint256 public constant MULTIPLIER = 1e18;\\n\\n    uint256 public epochUnit;\\n    uint256 public maxTime;\\n\\n    // id - point , \\ud2b9\\uc815\\uc544\\uc774\\ub514\\uc758 \\ud3ec\\uc778\\ud2b8\\ub97c \\ubaa8\\ub450 \\uc800\\uc7a5\\n    mapping(uint256 => LibLockId.SyncInfo[]) public pointHistoryByLockId;\\n\\n    // \\uc2dc\\uac04\\ub300\\uc21c\\uc73c\\ub85c \\ubaa8\\ub4e0 stos\\ub97c \\uad00\\ub9ac\\ud558\\ub294 \\uc815\\ubcf4\\n    // \\uc2dc\\uac04\\ub300\\uc758 \\ud0c0\\uc784 (\\ub9e4\\uc8fc\\ubaa9\\uc694\\uc77c0\\uc2dc) -> \\ud574\\ub2f9 \\uc2dc\\uac04\\ub300\\uc758 \\ud3ec\\uc778\\ud2b8 \\ubc30\\uc5f4\\n    mapping(uint256 => LibLockId.SyncInfo[]) public pointHistoryByWeek;\\n\\n    // \\uc5c5\\ub370\\uc774\\ud2b8\\uac00 \\uc788\\ub294 \\uc8fc(\\ud0c0\\uc784)\\uc5d0 \\ub300\\ud55c \\uc778\\ub371\\uc2f1\\n    uint256[] public indexOfTimeset;\\n    mapping(uint256 => bool) public indexCheckOfTimeset;\\n}\\n\",\"keccak256\":\"0xc62d5279764b6ef7aa91b311df7146bb384e7e804dfc0ddbad9102196f19b920\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50600080546001600160a01b0319163390811782556040519091907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a36100606301ffc9a760e01b610077565b600580546001600160a01b031916331790556100fa565b6001600160e01b031980821690036100d55760405162461bcd60e51b815260206004820152601c60248201527f4552433136353a20696e76616c696420696e7465726661636520696400000000604482015260640160405180910390fd5b6001600160e01b0319166000908152600460205260409020805460ff19166001179055565b611b01806101096000396000f3fe6080604052600436106102eb5760003560e01c806388290adc11610184578063b911135f116100d6578063e178ee201161008a578063f2fde38b11610064578063f2fde38b146109b4578063f6631718146109d4578063fd2dcecf14610a015761033d565b8063e178ee2014610939578063edc3bc3f14610959578063f0329f6b146109945761033d565b8063cea823cd116100bb578063cea823cd146108d9578063d28d885214610909578063dece68541461091e5761033d565b8063b911135f14610883578063ccc39909146108b95761033d565b8063a726366511610138578063b01ac59111610112578063b01ac59114610833578063b09f12661461084e578063b2bdfa7b146108635761033d565b8063a7263665146107b0578063a7cc0136146107dd578063aa5965ae146108135761033d565b80638d4fdb40116101695780638d4fdb401461074857806394a509dd14610768578063a2e9b439146107835761033d565b806388290adc146106de5780638b8f4a65146107125761033d565b806350d2a2761161023d5780636c146d9b116101f1578063796db312116101cb578063796db312146106685780637cb00d251461069e5780637cd5f663146106be5761033d565b80636c146d9b14610629578063715018a61461063e578063743976a0146106535761033d565b80635c60da1b116102225780635c60da1b146105a25780635cc797d8146105e857806363a8fd89146106085761033d565b806350d2a27614610524578063550d01a3146105725761033d565b806322e67e711161029f5780634a5df50f116102795780634a5df50f146104d15780634f1ef286146104f15780634f3c5f06146105045761033d565b806322e67e711461044f57806328f02c68146104655780633659cfe6146104b15761033d565b80630bb78ec1116102d05780630bb78ec1146103c057806310c11360146103ed57806317a3a79c1461040d5761033d565b806301ffc9a714610347578063059f8b16146103965761033d565b3661033d5760405162461bcd60e51b815260206004820152601460248201527f63616e6e6f74207265636569766520457468657200000000000000000000000060448201526064015b60405180910390fd5b610345610a17565b005b34801561035357600080fd5b5061038161036236600461178a565b6001600160e01b03191660009081526004602052604090205460ff1690565b60405190151581526020015b60405180910390f35b3480156103a257600080fd5b506103b2670de0b6b3a764000081565b60405190815260200161038d565b3480156103cc57600080fd5b506103e06103db3660046117bb565b610ac7565b60405161038d919061181a565b3480156103f957600080fd5b506103b26104083660046117bb565b610b61565b34801561041957600080fd5b5061043d6104283660046117bb565b60096020526000908152604090205460ff1681565b60405160ff909116815260200161038d565b34801561045b57600080fd5b506103b260155481565b34801561047157600080fd5b5061048561048036600461182d565b610b82565b60408051948552602085019390935263ffffffff9182169284019290925216606082015260800161038d565b3480156104bd57600080fd5b506103456104cc366004611866565b610bd6565b3480156104dd57600080fd5b506103456104ec366004611881565b610d27565b6103e06104ff366004611905565b610fbf565b34801561051057600080fd5b506103b261051f366004611988565b6110f3565b34801561053057600080fd5b5061055a61053f36600461178a565b6003602052600090815260409020546001600160a01b031681565b6040516001600160a01b03909116815260200161038d565b34801561057e57600080fd5b5061038161058d366004611866565b60026020526000908152604090205460ff1681565b3480156105ae57600080fd5b506000805260016020527fa6eef7e35abe7026729641147f7915573c7e97b47efa546f5f6e3230263bcb49546001600160a01b031661055a565b3480156105f457600080fd5b506103456106033660046119c2565b611124565b34801561061457600080fd5b5060005461038190600160a01b900460ff1681565b34801561063557600080fd5b50610345611178565b34801561064a57600080fd5b5061034561120a565b34801561065f57600080fd5b506103e061129a565b34801561067457600080fd5b5061055a6106833660046117bb565b600b602052600090815260409020546001600160a01b031681565b3480156106aa57600080fd5b506103456106b93660046119f5565b6112a7565b3480156106ca57600080fd5b506103456106d9366004611a10565b61131c565b3480156106ea57600080fd5b506106f9630a85bd0160e11b81565b6040516001600160e01b0319909116815260200161038d565b34801561071e57600080fd5b5061055a61072d3660046117bb565b6000908152600160205260409020546001600160a01b031690565b34801561075457600080fd5b5061055a61076336600461178a565b61136d565b34801561077457600080fd5b506106f9635b5e139f60e01b81565b34801561078f57600080fd5b506103b261079e3660046117bb565b60106020526000908152604090205481565b3480156107bc57600080fd5b506103b26107cb3660046117bb565b60126020526000908152604090205481565b3480156107e957600080fd5b5061055a6107f83660046117bb565b600c602052600090815260409020546001600160a01b031681565b34801561081f57600080fd5b506103b261082e3660046117bb565b611469565b34801561083f57600080fd5b506106f963780e9d6360e01b81565b34801561085a57600080fd5b506103e0611479565b34801561086f57600080fd5b5060005461055a906001600160a01b031681565b34801561088f57600080fd5b5061055a61089e3660046117bb565b6001602052600090815260409020546001600160a01b031681565b3480156108c557600080fd5b506103456108d4366004611866565b611486565b3480156108e557600080fd5b506103816108f43660046117bb565b60196020526000908152604090205460ff1681565b34801561091557600080fd5b506103e0611580565b34801561092a57600080fd5b506106f96380ac58cd60e01b81565b34801561094557600080fd5b5061048561095436600461182d565b61158d565b34801561096557600080fd5b50610381610974366004611a43565b600e60209081526000928352604080842090915290825290205460ff1681565b3480156109a057600080fd5b5060055461055a906001600160a01b031681565b3480156109c057600080fd5b506103456109cf366004611866565b6115a9565b3480156109e057600080fd5b506103b26109ef366004611866565b600d6020526000908152604090205481565b348015610a0d57600080fd5b506103b260145481565b6000610a2e6000356001600160e01b03191661136d565b90506001600160a01b03811615801590610a525750600054600160a01b900460ff16155b610a9e5760405162461bcd60e51b815260206004820152601d60248201527f50726f78793a20696d706c204f522070726f78792069732066616c73650000006044820152606401610334565b3660008037600080366000845af43d6000803e808015610abd573d6000f35b3d6000fd5b505050565b60086020526000908152604090208054610ae090611a6d565b80601f0160208091040260200160405190810160405280929190818152602001828054610b0c90611a6d565b8015610b595780601f10610b2e57610100808354040283529160200191610b59565b820191906000526020600020905b815481529060010190602001808311610b3c57829003601f168201915b505050505081565b60188181548110610b7157600080fd5b600091825260209091200154905081565b60176020528160005260406000208181548110610b9e57600080fd5b600091825260209091206003909102018054600182015460029092015490935090915063ffffffff8082169164010000000090041684565b6000546001600160a01b03163314610c1c5760405162461bcd60e51b81526020600482015260096024820152683737ba1037bbb732b960b91b6044820152606401610334565b6001600160a01b038116610c725760405162461bcd60e51b815260206004820152600d60248201527f696e707574206973207a65726f000000000000000000000000000000000000006044820152606401610334565b6000805260016020527fa6eef7e35abe7026729641147f7915573c7e97b47efa546f5f6e3230263bcb49546001600160a01b03828116911603610ce35760405162461bcd60e51b815260206004820152600960248201526839b0b6b29030b2323960b91b6044820152606401610334565b610cf081600060016116a0565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b6000546001600160a01b03163314610d6d5760405162461bcd60e51b81526020600482015260096024820152683737ba1037bbb732b960b91b6044820152606401610334565b81610dba5760405162461bcd60e51b815260206004820181905260248201527f50726f78793a205f73656c6563746f727327732073697a65206973207a65726f6044820152606401610334565b6001600160a01b03811660009081526002602052604090205460ff16610e225760405162461bcd60e51b815260206004820152601860248201527f50726f78793a205f696d70206973206e6f7420616c69766500000000000000006044820152606401610334565b60005b82811015610fb957816001600160a01b031660036000868685818110610e4d57610e4d611aa7565b9050602002016020810190610e62919061178a565b6001600160e01b03191681526020810191909152604001600020546001600160a01b031603610ed35760405162461bcd60e51b815260206004820152601d60248201527f4c69717569646974795661756c7450726f78793a2073616d6520696d700000006044820152606401610334565b8160036000868685818110610eea57610eea611aa7565b9050602002016020810190610eff919061178a565b6001600160e01b0319168152602081019190915260400160002080546001600160a01b0319166001600160a01b039283161790558216848483818110610f4757610f47611aa7565b9050602002016020810190610f5c919061178a565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167f14ebc1c32aa68f4d766e89f3e546cee249f7df25183fc10ab1568d91c2ce9b7b60405160405180910390a380610fb181611abd565b915050610e25565b50505050565b6000546060906001600160a01b031633146110085760405162461bcd60e51b81526020600482015260096024820152683737ba1037bbb732b960b91b6044820152606401610334565b61101584600060016116a0565b600080856001600160a01b03168585604051611032929190611ae4565b600060405180830381855af49150503d806000811461106d576040519150601f19603f3d011682016040523d82523d6000602084013e611072565b606091505b5091509150816110ea5760405162461bcd60e51b815260206004820152603960248201527f50726f78793a2064656c656761746563616c6c20746f206e657720696d706c6560448201527f6d656e746174696f6e20636f6e7472616374206661696c6564000000000000006064820152608401610334565b95945050505050565b600f602052816000526040600020818154811061110f57600080fd5b90600052602060002001600091509150505481565b6000546001600160a01b0316331461116a5760405162461bcd60e51b81526020600482015260096024820152683737ba1037bbb732b960b91b6044820152606401610334565b611174828261172b565b5050565b6005546001600160a01b031633146111c05760405162461bcd60e51b815260206004820152600b60248201526a3737ba1036b0b730b3b2b960a91b6044820152606401610334565b6005546040516000916001600160a01b0316907f697e4e68d3879b0dd3414a88905117bac8f0a54b0cd8e7779f909bf1a1cf5683908390a3600580546001600160a01b0319169055565b6000546001600160a01b031633146112505760405162461bcd60e51b81526020600482015260096024820152683737ba1037bbb732b960b91b6044820152606401610334565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b600a8054610ae090611a6d565b6000546001600160a01b031633146112ed5760405162461bcd60e51b81526020600482015260096024820152683737ba1037bbb732b960b91b6044820152606401610334565b60008054911515600160a01b0274ff000000000000000000000000000000000000000019909216919091179055565b6000546001600160a01b031633146113625760405162461bcd60e51b81526020600482015260096024820152683737ba1037bbb732b960b91b6044820152606401610334565b610ac28383836116a0565b6001600160e01b031981166000908152600360205260408120546001600160a01b03166113cd5750506000805260016020527fa6eef7e35abe7026729641147f7915573c7e97b47efa546f5f6e3230263bcb49546001600160a01b031690565b6001600160e01b031982166000908152600360209081526040808320546001600160a01b03168352600290915290205460ff161561142b57506001600160e01b0319166000908152600360205260409020546001600160a01b031690565b50506000805260016020527fa6eef7e35abe7026729641147f7915573c7e97b47efa546f5f6e3230263bcb49546001600160a01b031690565b919050565b60118181548110610b7157600080fd5b60078054610ae090611a6d565b6005546001600160a01b031633146114ce5760405162461bcd60e51b815260206004820152600b60248201526a3737ba1036b0b730b3b2b960a91b6044820152606401610334565b6001600160a01b0381166115245760405162461bcd60e51b815260206004820152601f60248201527f6e6577206d616e6167657220697320746865207a65726f2061646472657373006044820152606401610334565b6005546040516001600160a01b038084169216907f697e4e68d3879b0dd3414a88905117bac8f0a54b0cd8e7779f909bf1a1cf568390600090a3600580546001600160a01b0319166001600160a01b0392909216919091179055565b60068054610ae090611a6d565b60166020528160005260406000208181548110610b9e57600080fd5b6000546001600160a01b031633146115ef5760405162461bcd60e51b81526020600482015260096024820152683737ba1037bbb732b960b91b6044820152606401610334565b6001600160a01b0381166116455760405162461bcd60e51b815260206004820152601d60248201527f6e6577206f776e657220697320746865207a65726f20616464726573730000006044820152606401610334565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b0383163b6116f75760405162461bcd60e51b815260206004820152601b60248201527f50726f78793a206e6f7420636f6e7472616374206164647265737300000000006044820152606401610334565b801561172557600082815260016020526040902080546001600160a01b0319166001600160a01b0385161790555b610ac283825b6001600160a01b038216600081815260026020908152604091829020805460ff191685151590811790915591519182527f72558d9bfba4210f9ef095c782589484151f6d90f7a81bb3cb9b33efc695d324910160405180910390a25050565b60006020828403121561179c57600080fd5b81356001600160e01b0319811681146117b457600080fd5b9392505050565b6000602082840312156117cd57600080fd5b5035919050565b6000815180845260005b818110156117fa576020818501810151868301820152016117de565b506000602082860101526020601f19601f83011685010191505092915050565b6020815260006117b460208301846117d4565b6000806040838503121561184057600080fd5b50508035926020909101359150565b80356001600160a01b038116811461146457600080fd5b60006020828403121561187857600080fd5b6117b48261184f565b60008060006040848603121561189657600080fd5b833567ffffffffffffffff808211156118ae57600080fd5b818601915086601f8301126118c257600080fd5b8135818111156118d157600080fd5b8760208260051b85010111156118e657600080fd5b6020928301955093506118fc918601905061184f565b90509250925092565b60008060006040848603121561191a57600080fd5b6119238461184f565b9250602084013567ffffffffffffffff8082111561194057600080fd5b818601915086601f83011261195457600080fd5b81358181111561196357600080fd5b87602082850101111561197557600080fd5b6020830194508093505050509250925092565b6000806040838503121561199b57600080fd5b6119a48361184f565b946020939093013593505050565b8035801515811461146457600080fd5b600080604083850312156119d557600080fd5b6119de8361184f565b91506119ec602084016119b2565b90509250929050565b600060208284031215611a0757600080fd5b6117b4826119b2565b600080600060608486031215611a2557600080fd5b611a2e8461184f565b9250602084013591506118fc604085016119b2565b60008060408385031215611a5657600080fd5b611a5f8361184f565b91506119ec6020840161184f565b600181811c90821680611a8157607f821691505b602082108103611aa157634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b600060018201611add57634e487b7160e01b600052601160045260246000fd5b5060010190565b818382376000910190815291905056fea164736f6c6343000812000a",
  "deployedBytecode": "0x6080604052600436106102eb5760003560e01c806388290adc11610184578063b911135f116100d6578063e178ee201161008a578063f2fde38b11610064578063f2fde38b146109b4578063f6631718146109d4578063fd2dcecf14610a015761033d565b8063e178ee2014610939578063edc3bc3f14610959578063f0329f6b146109945761033d565b8063cea823cd116100bb578063cea823cd146108d9578063d28d885214610909578063dece68541461091e5761033d565b8063b911135f14610883578063ccc39909146108b95761033d565b8063a726366511610138578063b01ac59111610112578063b01ac59114610833578063b09f12661461084e578063b2bdfa7b146108635761033d565b8063a7263665146107b0578063a7cc0136146107dd578063aa5965ae146108135761033d565b80638d4fdb40116101695780638d4fdb401461074857806394a509dd14610768578063a2e9b439146107835761033d565b806388290adc146106de5780638b8f4a65146107125761033d565b806350d2a2761161023d5780636c146d9b116101f1578063796db312116101cb578063796db312146106685780637cb00d251461069e5780637cd5f663146106be5761033d565b80636c146d9b14610629578063715018a61461063e578063743976a0146106535761033d565b80635c60da1b116102225780635c60da1b146105a25780635cc797d8146105e857806363a8fd89146106085761033d565b806350d2a27614610524578063550d01a3146105725761033d565b806322e67e711161029f5780634a5df50f116102795780634a5df50f146104d15780634f1ef286146104f15780634f3c5f06146105045761033d565b806322e67e711461044f57806328f02c68146104655780633659cfe6146104b15761033d565b80630bb78ec1116102d05780630bb78ec1146103c057806310c11360146103ed57806317a3a79c1461040d5761033d565b806301ffc9a714610347578063059f8b16146103965761033d565b3661033d5760405162461bcd60e51b815260206004820152601460248201527f63616e6e6f74207265636569766520457468657200000000000000000000000060448201526064015b60405180910390fd5b610345610a17565b005b34801561035357600080fd5b5061038161036236600461178a565b6001600160e01b03191660009081526004602052604090205460ff1690565b60405190151581526020015b60405180910390f35b3480156103a257600080fd5b506103b2670de0b6b3a764000081565b60405190815260200161038d565b3480156103cc57600080fd5b506103e06103db3660046117bb565b610ac7565b60405161038d919061181a565b3480156103f957600080fd5b506103b26104083660046117bb565b610b61565b34801561041957600080fd5b5061043d6104283660046117bb565b60096020526000908152604090205460ff1681565b60405160ff909116815260200161038d565b34801561045b57600080fd5b506103b260155481565b34801561047157600080fd5b5061048561048036600461182d565b610b82565b60408051948552602085019390935263ffffffff9182169284019290925216606082015260800161038d565b3480156104bd57600080fd5b506103456104cc366004611866565b610bd6565b3480156104dd57600080fd5b506103456104ec366004611881565b610d27565b6103e06104ff366004611905565b610fbf565b34801561051057600080fd5b506103b261051f366004611988565b6110f3565b34801561053057600080fd5b5061055a61053f36600461178a565b6003602052600090815260409020546001600160a01b031681565b6040516001600160a01b03909116815260200161038d565b34801561057e57600080fd5b5061038161058d366004611866565b60026020526000908152604090205460ff1681565b3480156105ae57600080fd5b506000805260016020527fa6eef7e35abe7026729641147f7915573c7e97b47efa546f5f6e3230263bcb49546001600160a01b031661055a565b3480156105f457600080fd5b506103456106033660046119c2565b611124565b34801561061457600080fd5b5060005461038190600160a01b900460ff1681565b34801561063557600080fd5b50610345611178565b34801561064a57600080fd5b5061034561120a565b34801561065f57600080fd5b506103e061129a565b34801561067457600080fd5b5061055a6106833660046117bb565b600b602052600090815260409020546001600160a01b031681565b3480156106aa57600080fd5b506103456106b93660046119f5565b6112a7565b3480156106ca57600080fd5b506103456106d9366004611a10565b61131c565b3480156106ea57600080fd5b506106f9630a85bd0160e11b81565b6040516001600160e01b0319909116815260200161038d565b34801561071e57600080fd5b5061055a61072d3660046117bb565b6000908152600160205260409020546001600160a01b031690565b34801561075457600080fd5b5061055a61076336600461178a565b61136d565b34801561077457600080fd5b506106f9635b5e139f60e01b81565b34801561078f57600080fd5b506103b261079e3660046117bb565b60106020526000908152604090205481565b3480156107bc57600080fd5b506103b26107cb3660046117bb565b60126020526000908152604090205481565b3480156107e957600080fd5b5061055a6107f83660046117bb565b600c602052600090815260409020546001600160a01b031681565b34801561081f57600080fd5b506103b261082e3660046117bb565b611469565b34801561083f57600080fd5b506106f963780e9d6360e01b81565b34801561085a57600080fd5b506103e0611479565b34801561086f57600080fd5b5060005461055a906001600160a01b031681565b34801561088f57600080fd5b5061055a61089e3660046117bb565b6001602052600090815260409020546001600160a01b031681565b3480156108c557600080fd5b506103456108d4366004611866565b611486565b3480156108e557600080fd5b506103816108f43660046117bb565b60196020526000908152604090205460ff1681565b34801561091557600080fd5b506103e0611580565b34801561092a57600080fd5b506106f96380ac58cd60e01b81565b34801561094557600080fd5b5061048561095436600461182d565b61158d565b34801561096557600080fd5b50610381610974366004611a43565b600e60209081526000928352604080842090915290825290205460ff1681565b3480156109a057600080fd5b5060055461055a906001600160a01b031681565b3480156109c057600080fd5b506103456109cf366004611866565b6115a9565b3480156109e057600080fd5b506103b26109ef366004611866565b600d6020526000908152604090205481565b348015610a0d57600080fd5b506103b260145481565b6000610a2e6000356001600160e01b03191661136d565b90506001600160a01b03811615801590610a525750600054600160a01b900460ff16155b610a9e5760405162461bcd60e51b815260206004820152601d60248201527f50726f78793a20696d706c204f522070726f78792069732066616c73650000006044820152606401610334565b3660008037600080366000845af43d6000803e808015610abd573d6000f35b3d6000fd5b505050565b60086020526000908152604090208054610ae090611a6d565b80601f0160208091040260200160405190810160405280929190818152602001828054610b0c90611a6d565b8015610b595780601f10610b2e57610100808354040283529160200191610b59565b820191906000526020600020905b815481529060010190602001808311610b3c57829003601f168201915b505050505081565b60188181548110610b7157600080fd5b600091825260209091200154905081565b60176020528160005260406000208181548110610b9e57600080fd5b600091825260209091206003909102018054600182015460029092015490935090915063ffffffff8082169164010000000090041684565b6000546001600160a01b03163314610c1c5760405162461bcd60e51b81526020600482015260096024820152683737ba1037bbb732b960b91b6044820152606401610334565b6001600160a01b038116610c725760405162461bcd60e51b815260206004820152600d60248201527f696e707574206973207a65726f000000000000000000000000000000000000006044820152606401610334565b6000805260016020527fa6eef7e35abe7026729641147f7915573c7e97b47efa546f5f6e3230263bcb49546001600160a01b03828116911603610ce35760405162461bcd60e51b815260206004820152600960248201526839b0b6b29030b2323960b91b6044820152606401610334565b610cf081600060016116a0565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b6000546001600160a01b03163314610d6d5760405162461bcd60e51b81526020600482015260096024820152683737ba1037bbb732b960b91b6044820152606401610334565b81610dba5760405162461bcd60e51b815260206004820181905260248201527f50726f78793a205f73656c6563746f727327732073697a65206973207a65726f6044820152606401610334565b6001600160a01b03811660009081526002602052604090205460ff16610e225760405162461bcd60e51b815260206004820152601860248201527f50726f78793a205f696d70206973206e6f7420616c69766500000000000000006044820152606401610334565b60005b82811015610fb957816001600160a01b031660036000868685818110610e4d57610e4d611aa7565b9050602002016020810190610e62919061178a565b6001600160e01b03191681526020810191909152604001600020546001600160a01b031603610ed35760405162461bcd60e51b815260206004820152601d60248201527f4c69717569646974795661756c7450726f78793a2073616d6520696d700000006044820152606401610334565b8160036000868685818110610eea57610eea611aa7565b9050602002016020810190610eff919061178a565b6001600160e01b0319168152602081019190915260400160002080546001600160a01b0319166001600160a01b039283161790558216848483818110610f4757610f47611aa7565b9050602002016020810190610f5c919061178a565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167f14ebc1c32aa68f4d766e89f3e546cee249f7df25183fc10ab1568d91c2ce9b7b60405160405180910390a380610fb181611abd565b915050610e25565b50505050565b6000546060906001600160a01b031633146110085760405162461bcd60e51b81526020600482015260096024820152683737ba1037bbb732b960b91b6044820152606401610334565b61101584600060016116a0565b600080856001600160a01b03168585604051611032929190611ae4565b600060405180830381855af49150503d806000811461106d576040519150601f19603f3d011682016040523d82523d6000602084013e611072565b606091505b5091509150816110ea5760405162461bcd60e51b815260206004820152603960248201527f50726f78793a2064656c656761746563616c6c20746f206e657720696d706c6560448201527f6d656e746174696f6e20636f6e7472616374206661696c6564000000000000006064820152608401610334565b95945050505050565b600f602052816000526040600020818154811061110f57600080fd5b90600052602060002001600091509150505481565b6000546001600160a01b0316331461116a5760405162461bcd60e51b81526020600482015260096024820152683737ba1037bbb732b960b91b6044820152606401610334565b611174828261172b565b5050565b6005546001600160a01b031633146111c05760405162461bcd60e51b815260206004820152600b60248201526a3737ba1036b0b730b3b2b960a91b6044820152606401610334565b6005546040516000916001600160a01b0316907f697e4e68d3879b0dd3414a88905117bac8f0a54b0cd8e7779f909bf1a1cf5683908390a3600580546001600160a01b0319169055565b6000546001600160a01b031633146112505760405162461bcd60e51b81526020600482015260096024820152683737ba1037bbb732b960b91b6044820152606401610334565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b600a8054610ae090611a6d565b6000546001600160a01b031633146112ed5760405162461bcd60e51b81526020600482015260096024820152683737ba1037bbb732b960b91b6044820152606401610334565b60008054911515600160a01b0274ff000000000000000000000000000000000000000019909216919091179055565b6000546001600160a01b031633146113625760405162461bcd60e51b81526020600482015260096024820152683737ba1037bbb732b960b91b6044820152606401610334565b610ac28383836116a0565b6001600160e01b031981166000908152600360205260408120546001600160a01b03166113cd5750506000805260016020527fa6eef7e35abe7026729641147f7915573c7e97b47efa546f5f6e3230263bcb49546001600160a01b031690565b6001600160e01b031982166000908152600360209081526040808320546001600160a01b03168352600290915290205460ff161561142b57506001600160e01b0319166000908152600360205260409020546001600160a01b031690565b50506000805260016020527fa6eef7e35abe7026729641147f7915573c7e97b47efa546f5f6e3230263bcb49546001600160a01b031690565b919050565b60118181548110610b7157600080fd5b60078054610ae090611a6d565b6005546001600160a01b031633146114ce5760405162461bcd60e51b815260206004820152600b60248201526a3737ba1036b0b730b3b2b960a91b6044820152606401610334565b6001600160a01b0381166115245760405162461bcd60e51b815260206004820152601f60248201527f6e6577206d616e6167657220697320746865207a65726f2061646472657373006044820152606401610334565b6005546040516001600160a01b038084169216907f697e4e68d3879b0dd3414a88905117bac8f0a54b0cd8e7779f909bf1a1cf568390600090a3600580546001600160a01b0319166001600160a01b0392909216919091179055565b60068054610ae090611a6d565b60166020528160005260406000208181548110610b9e57600080fd5b6000546001600160a01b031633146115ef5760405162461bcd60e51b81526020600482015260096024820152683737ba1037bbb732b960b91b6044820152606401610334565b6001600160a01b0381166116455760405162461bcd60e51b815260206004820152601d60248201527f6e6577206f776e657220697320746865207a65726f20616464726573730000006044820152606401610334565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b0383163b6116f75760405162461bcd60e51b815260206004820152601b60248201527f50726f78793a206e6f7420636f6e7472616374206164647265737300000000006044820152606401610334565b801561172557600082815260016020526040902080546001600160a01b0319166001600160a01b0385161790555b610ac283825b6001600160a01b038216600081815260026020908152604091829020805460ff191685151590811790915591519182527f72558d9bfba4210f9ef095c782589484151f6d90f7a81bb3cb9b33efc695d324910160405180910390a25050565b60006020828403121561179c57600080fd5b81356001600160e01b0319811681146117b457600080fd5b9392505050565b6000602082840312156117cd57600080fd5b5035919050565b6000815180845260005b818110156117fa576020818501810151868301820152016117de565b506000602082860101526020601f19601f83011685010191505092915050565b6020815260006117b460208301846117d4565b6000806040838503121561184057600080fd5b50508035926020909101359150565b80356001600160a01b038116811461146457600080fd5b60006020828403121561187857600080fd5b6117b48261184f565b60008060006040848603121561189657600080fd5b833567ffffffffffffffff808211156118ae57600080fd5b818601915086601f8301126118c257600080fd5b8135818111156118d157600080fd5b8760208260051b85010111156118e657600080fd5b6020928301955093506118fc918601905061184f565b90509250925092565b60008060006040848603121561191a57600080fd5b6119238461184f565b9250602084013567ffffffffffffffff8082111561194057600080fd5b818601915086601f83011261195457600080fd5b81358181111561196357600080fd5b87602082850101111561197557600080fd5b6020830194508093505050509250925092565b6000806040838503121561199b57600080fd5b6119a48361184f565b946020939093013593505050565b8035801515811461146457600080fd5b600080604083850312156119d557600080fd5b6119de8361184f565b91506119ec602084016119b2565b90509250929050565b600060208284031215611a0757600080fd5b6117b4826119b2565b600080600060608486031215611a2557600080fd5b611a2e8461184f565b9250602084013591506118fc604085016119b2565b60008060408385031215611a5657600080fd5b611a5f8361184f565b91506119ec6020840161184f565b600181811c90821680611a8157607f821691505b602082108103611aa157634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b600060018201611add57634e487b7160e01b600052601160045260246000fd5b5060010190565b818382376000910190815291905056fea164736f6c6343000812000a",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "getSelectorImplementation2(bytes4)": {
        "details": "view implementation address of selector of function",
        "params": {
          "_selector": "selector of function"
        },
        "returns": {
          "impl": "address of the implementation"
        }
      },
      "implementation()": {
        "details": "returns the implementation"
      },
      "implementation2(uint256)": {
        "details": "view implementation address of the proxy[index]",
        "params": {
          "_index": "index of proxy"
        },
        "returns": {
          "_0": "address of the implementation"
        }
      },
      "setAliveImplementation2(address,bool)": {
        "details": "set alive status of implementation",
        "params": {
          "_alive": "alive status",
          "newImplementation": "Address of the new implementation."
        }
      },
      "setImplementation2(address,uint256,bool)": {
        "details": "set the implementation address and status of the proxy[index]",
        "params": {
          "_alive": "_alive",
          "_index": "index",
          "newImplementation": "Address of the new implementation."
        }
      },
      "setProxyPause(bool)": {
        "params": {
          "_pause": "true:pause or false:resume"
        }
      },
      "setSelectorImplementations2(bytes4[],address)": {
        "details": "set selectors of Implementation",
        "params": {
          "_imp": "implementation address",
          "_selectors": "being added selectors"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}. Time complexity O(1), guaranteed to always use less than 30 000 gas."
      },
      "upgradeTo(address)": {
        "params": {
          "impl": "New implementation contract address"
        }
      },
      "upgradeToAndCall(address,bytes)": {
        "params": {
          "_data": "Calldata to delegatecall the new implementation with.",
          "_implementation": "Address of the implementation contract."
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "setProxyPause(bool)": {
        "notice": "Set pause state"
      },
      "upgradeTo(address)": {
        "notice": "Set implementation contract"
      },
      "upgradeToAndCall(address,bytes)": {
        "notice": "Set the implementation and call a function in a single transaction. Useful to ensure         atomic execution of initialization-based upgrades."
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 916,
        "contract": "contracts/stos/LockIdNftForRegisterProxy.sol:LockIdNftForRegisterProxy",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 918,
        "contract": "contracts/stos/LockIdNftForRegisterProxy.sol:LockIdNftForRegisterProxy",
        "label": "pauseProxy",
        "offset": 20,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 922,
        "contract": "contracts/stos/LockIdNftForRegisterProxy.sol:LockIdNftForRegisterProxy",
        "label": "proxyImplementation",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_uint256,t_address)"
      },
      {
        "astId": 926,
        "contract": "contracts/stos/LockIdNftForRegisterProxy.sol:LockIdNftForRegisterProxy",
        "label": "aliveImplementation",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 930,
        "contract": "contracts/stos/LockIdNftForRegisterProxy.sol:LockIdNftForRegisterProxy",
        "label": "selectorImplementation",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_bytes4,t_address)"
      },
      {
        "astId": 945,
        "contract": "contracts/stos/LockIdNftForRegisterProxy.sol:LockIdNftForRegisterProxy",
        "label": "_supportedInterfaces",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_bytes4,t_bool)"
      },
      {
        "astId": 1072,
        "contract": "contracts/stos/LockIdNftForRegisterProxy.sol:LockIdNftForRegisterProxy",
        "label": "_manager",
        "offset": 0,
        "slot": "5",
        "type": "t_address"
      },
      {
        "astId": 1074,
        "contract": "contracts/stos/LockIdNftForRegisterProxy.sol:LockIdNftForRegisterProxy",
        "label": "_name",
        "offset": 0,
        "slot": "6",
        "type": "t_string_storage"
      },
      {
        "astId": 1076,
        "contract": "contracts/stos/LockIdNftForRegisterProxy.sol:LockIdNftForRegisterProxy",
        "label": "_symbol",
        "offset": 0,
        "slot": "7",
        "type": "t_string_storage"
      },
      {
        "astId": 1080,
        "contract": "contracts/stos/LockIdNftForRegisterProxy.sol:LockIdNftForRegisterProxy",
        "label": "_tokenURIs",
        "offset": 0,
        "slot": "8",
        "type": "t_mapping(t_uint256,t_string_storage)"
      },
      {
        "astId": 1084,
        "contract": "contracts/stos/LockIdNftForRegisterProxy.sol:LockIdNftForRegisterProxy",
        "label": "_tokenAttributes",
        "offset": 0,
        "slot": "9",
        "type": "t_mapping(t_uint256,t_uint8)"
      },
      {
        "astId": 1086,
        "contract": "contracts/stos/LockIdNftForRegisterProxy.sol:LockIdNftForRegisterProxy",
        "label": "_baseURI",
        "offset": 0,
        "slot": "10",
        "type": "t_string_storage"
      },
      {
        "astId": 1090,
        "contract": "contracts/stos/LockIdNftForRegisterProxy.sol:LockIdNftForRegisterProxy",
        "label": "_tokenOwner",
        "offset": 0,
        "slot": "11",
        "type": "t_mapping(t_uint256,t_address)"
      },
      {
        "astId": 1094,
        "contract": "contracts/stos/LockIdNftForRegisterProxy.sol:LockIdNftForRegisterProxy",
        "label": "_tokenApprovals",
        "offset": 0,
        "slot": "12",
        "type": "t_mapping(t_uint256,t_address)"
      },
      {
        "astId": 1098,
        "contract": "contracts/stos/LockIdNftForRegisterProxy.sol:LockIdNftForRegisterProxy",
        "label": "_ownedTokensCount",
        "offset": 0,
        "slot": "13",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 1104,
        "contract": "contracts/stos/LockIdNftForRegisterProxy.sol:LockIdNftForRegisterProxy",
        "label": "_operatorApprovals",
        "offset": 0,
        "slot": "14",
        "type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
      },
      {
        "astId": 1109,
        "contract": "contracts/stos/LockIdNftForRegisterProxy.sol:LockIdNftForRegisterProxy",
        "label": "_ownedTokens",
        "offset": 0,
        "slot": "15",
        "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)"
      },
      {
        "astId": 1113,
        "contract": "contracts/stos/LockIdNftForRegisterProxy.sol:LockIdNftForRegisterProxy",
        "label": "_ownedTokensIndex",
        "offset": 0,
        "slot": "16",
        "type": "t_mapping(t_uint256,t_uint256)"
      },
      {
        "astId": 1116,
        "contract": "contracts/stos/LockIdNftForRegisterProxy.sol:LockIdNftForRegisterProxy",
        "label": "_allTokens",
        "offset": 0,
        "slot": "17",
        "type": "t_array(t_uint256)dyn_storage"
      },
      {
        "astId": 1120,
        "contract": "contracts/stos/LockIdNftForRegisterProxy.sol:LockIdNftForRegisterProxy",
        "label": "_allTokensIndex",
        "offset": 0,
        "slot": "18",
        "type": "t_mapping(t_uint256,t_uint256)"
      },
      {
        "astId": 1122,
        "contract": "contracts/stos/LockIdNftForRegisterProxy.sol:LockIdNftForRegisterProxy",
        "label": "_lock",
        "offset": 0,
        "slot": "19",
        "type": "t_bool"
      },
      {
        "astId": 1171,
        "contract": "contracts/stos/LockIdNftForRegisterProxy.sol:LockIdNftForRegisterProxy",
        "label": "epochUnit",
        "offset": 0,
        "slot": "20",
        "type": "t_uint256"
      },
      {
        "astId": 1173,
        "contract": "contracts/stos/LockIdNftForRegisterProxy.sol:LockIdNftForRegisterProxy",
        "label": "maxTime",
        "offset": 0,
        "slot": "21",
        "type": "t_uint256"
      },
      {
        "astId": 1179,
        "contract": "contracts/stos/LockIdNftForRegisterProxy.sol:LockIdNftForRegisterProxy",
        "label": "pointHistoryByLockId",
        "offset": 0,
        "slot": "22",
        "type": "t_mapping(t_uint256,t_array(t_struct(SyncInfo)442_storage)dyn_storage)"
      },
      {
        "astId": 1185,
        "contract": "contracts/stos/LockIdNftForRegisterProxy.sol:LockIdNftForRegisterProxy",
        "label": "pointHistoryByWeek",
        "offset": 0,
        "slot": "23",
        "type": "t_mapping(t_uint256,t_array(t_struct(SyncInfo)442_storage)dyn_storage)"
      },
      {
        "astId": 1188,
        "contract": "contracts/stos/LockIdNftForRegisterProxy.sol:LockIdNftForRegisterProxy",
        "label": "indexOfTimeset",
        "offset": 0,
        "slot": "24",
        "type": "t_array(t_uint256)dyn_storage"
      },
      {
        "astId": 1192,
        "contract": "contracts/stos/LockIdNftForRegisterProxy.sol:LockIdNftForRegisterProxy",
        "label": "indexCheckOfTimeset",
        "offset": 0,
        "slot": "25",
        "type": "t_mapping(t_uint256,t_bool)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_struct(SyncInfo)442_storage)dyn_storage": {
        "base": "t_struct(SyncInfo)442_storage",
        "encoding": "dynamic_array",
        "label": "struct LibLockId.SyncInfo[]",
        "numberOfBytes": "32"
      },
      "t_array(t_uint256)dyn_storage": {
        "base": "t_uint256",
        "encoding": "dynamic_array",
        "label": "uint256[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes4": {
        "encoding": "inplace",
        "label": "bytes4",
        "numberOfBytes": "4"
      },
      "t_int256": {
        "encoding": "inplace",
        "label": "int256",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256[])",
        "numberOfBytes": "32",
        "value": "t_array(t_uint256)dyn_storage"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_mapping(t_address,t_bool))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => bool))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_bool)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_bytes4,t_address)": {
        "encoding": "mapping",
        "key": "t_bytes4",
        "label": "mapping(bytes4 => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_mapping(t_bytes4,t_bool)": {
        "encoding": "mapping",
        "key": "t_bytes4",
        "label": "mapping(bytes4 => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_uint256,t_address)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_mapping(t_uint256,t_array(t_struct(SyncInfo)442_storage)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct LibLockId.SyncInfo[])",
        "numberOfBytes": "32",
        "value": "t_array(t_struct(SyncInfo)442_storage)dyn_storage"
      },
      "t_mapping(t_uint256,t_bool)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_uint256,t_string_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => string)",
        "numberOfBytes": "32",
        "value": "t_string_storage"
      },
      "t_mapping(t_uint256,t_uint256)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_uint256,t_uint8)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => uint8)",
        "numberOfBytes": "32",
        "value": "t_uint8"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(SyncInfo)442_storage": {
        "encoding": "inplace",
        "label": "struct LibLockId.SyncInfo",
        "members": [
          {
            "astId": 435,
            "contract": "contracts/stos/LockIdNftForRegisterProxy.sol:LockIdNftForRegisterProxy",
            "label": "slope",
            "offset": 0,
            "slot": "0",
            "type": "t_int256"
          },
          {
            "astId": 437,
            "contract": "contracts/stos/LockIdNftForRegisterProxy.sol:LockIdNftForRegisterProxy",
            "label": "bias",
            "offset": 0,
            "slot": "1",
            "type": "t_int256"
          },
          {
            "astId": 439,
            "contract": "contracts/stos/LockIdNftForRegisterProxy.sol:LockIdNftForRegisterProxy",
            "label": "timestamp",
            "offset": 0,
            "slot": "2",
            "type": "t_uint32"
          },
          {
            "astId": 441,
            "contract": "contracts/stos/LockIdNftForRegisterProxy.sol:LockIdNftForRegisterProxy",
            "label": "syncTime",
            "offset": 4,
            "slot": "2",
            "type": "t_uint32"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint32": {
        "encoding": "inplace",
        "label": "uint32",
        "numberOfBytes": "4"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  }
}