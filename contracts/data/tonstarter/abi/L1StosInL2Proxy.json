{
  "address": "0xa12431D37095CA8e3C04Eb1a4e7cE235718F10bF",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousManager",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newManager",
          "type": "address"
        }
      ],
      "name": "ManagershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "impl",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "alive",
          "type": "bool"
        }
      ],
      "name": "SetAliveImplementation",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes4",
          "name": "selector",
          "type": "bytes4"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "impl",
          "type": "address"
        }
      ],
      "name": "SetSelectorImplementation",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "implementation",
          "type": "address"
        }
      ],
      "name": "Upgraded",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "_manager",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "aliveImplementation",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "_selector",
          "type": "bytes4"
        }
      ],
      "name": "getSelectorImplementation2",
      "outputs": [
        {
          "internalType": "address",
          "name": "impl",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "implementation",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "implementation2",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "l1Register",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "l2CrossDomainMessenger",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lockIdNftForRegister",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pauseProxy",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "proxyImplementation",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceManagership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "name": "selectorImplementation",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newImplementation",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_alive",
          "type": "bool"
        }
      ],
      "name": "setAliveImplementation2",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newImplementation",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_alive",
          "type": "bool"
        }
      ],
      "name": "setImplementation2",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_pause",
          "type": "bool"
        }
      ],
      "name": "setProxyPause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4[]",
          "name": "_selectors",
          "type": "bytes4[]"
        },
        {
          "internalType": "address",
          "name": "_imp",
          "type": "address"
        }
      ],
      "name": "setSelectorImplementations2",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newManager",
          "type": "address"
        }
      ],
      "name": "transferManagership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "impl",
          "type": "address"
        }
      ],
      "name": "upgradeTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_implementation",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "upgradeToAndCall",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x759b2fb2752faf230c09affc04e642cda3a1c5e4f6d04770ca9d69e547a77824",
  "receipt": {
    "to": null,
    "from": "0xc1eba383D94c6021160042491A5dfaF1d82694E6",
    "contractAddress": "0xa12431D37095CA8e3C04Eb1a4e7cE235718F10bF",
    "transactionIndex": 0,
    "gasUsed": "1192345",
    "logsBloom": "0x
    "blockHash": "0xf2d70f2d16dd7da7abd5a4ee74785d990cf06e9e2f4294b82c9580677b3c4d6b",
    "transactionHash": "0x759b2fb2752faf230c09affc04e642cda3a1c5e4f6d04770ca9d69e547a77824",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 23626,
        "transactionHash": "0x759b2fb2752faf230c09affc04e642cda3a1c5e4f6d04770ca9d69e547a77824",
        "address": "0xa12431D37095CA8e3C04Eb1a4e7cE235718F10bF",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000c1eba383d94c6021160042491a5dfaf1d82694e6"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0xf2d70f2d16dd7da7abd5a4ee74785d990cf06e9e2f4294b82c9580677b3c4d6b"
      }
    ],
    "blockNumber": 23626,
    "cumulativeGasUsed": "1192345",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "922d4f58da819b2db212e67a166d96d6",
  "metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousManager\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newManager\",\"type\":\"address\"}],\"name\":\"ManagershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"impl\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"alive\",\"type\":\"bool\"}],\"name\":\"SetAliveImplementation\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"impl\",\"type\":\"address\"}],\"name\":\"SetSelectorImplementation\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"_manager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"aliveImplementation\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_selector\",\"type\":\"bytes4\"}],\"name\":\"getSelectorImplementation2\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"impl\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"implementation2\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"l1Register\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"l2CrossDomainMessenger\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lockIdNftForRegister\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pauseProxy\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"proxyImplementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceManagership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"name\":\"selectorImplementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_alive\",\"type\":\"bool\"}],\"name\":\"setAliveImplementation2\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_alive\",\"type\":\"bool\"}],\"name\":\"setImplementation2\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_pause\",\"type\":\"bool\"}],\"name\":\"setProxyPause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4[]\",\"name\":\"_selectors\",\"type\":\"bytes4[]\"},{\"internalType\":\"address\",\"name\":\"_imp\",\"type\":\"address\"}],\"name\":\"setSelectorImplementations2\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newManager\",\"type\":\"address\"}],\"name\":\"transferManagership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"impl\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_implementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getSelectorImplementation2(bytes4)\":{\"details\":\"view implementation address of selector of function\",\"params\":{\"_selector\":\"selector of function\"},\"returns\":{\"impl\":\"address of the implementation\"}},\"implementation()\":{\"details\":\"returns the implementation\"},\"implementation2(uint256)\":{\"details\":\"view implementation address of the proxy[index]\",\"params\":{\"_index\":\"index of proxy\"},\"returns\":{\"_0\":\"address of the implementation\"}},\"setAliveImplementation2(address,bool)\":{\"details\":\"set alive status of implementation\",\"params\":{\"_alive\":\"alive status\",\"newImplementation\":\"Address of the new implementation.\"}},\"setImplementation2(address,uint256,bool)\":{\"details\":\"set the implementation address and status of the proxy[index]\",\"params\":{\"_alive\":\"_alive\",\"_index\":\"index\",\"newImplementation\":\"Address of the new implementation.\"}},\"setProxyPause(bool)\":{\"params\":{\"_pause\":\"true:pause or false:resume\"}},\"setSelectorImplementations2(bytes4[],address)\":{\"details\":\"set selectors of Implementation\",\"params\":{\"_imp\":\"implementation address\",\"_selectors\":\"being added selectors\"}},\"upgradeTo(address)\":{\"params\":{\"impl\":\"New implementation contract address\"}},\"upgradeToAndCall(address,bytes)\":{\"params\":{\"_data\":\"Calldata to delegatecall the new implementation with.\",\"_implementation\":\"Address of the implementation contract.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"setProxyPause(bool)\":{\"notice\":\"Set pause state\"},\"upgradeTo(address)\":{\"notice\":\"Set implementation contract\"},\"upgradeToAndCall(address,bytes)\":{\"notice\":\"Set the implementation and call a function in a single transaction. Useful to ensure         atomic execution of initialization-based upgrades.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/L2/L1StosInL2Proxy.sol\":\"L1StosInL2Proxy\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":625},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\"},\"contracts/L2/L1StosInL2Proxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"../proxy/Proxy2.sol\\\";\\nimport \\\"./L1StosInL2Storage.sol\\\";\\n\\ncontract L1StosInL2Proxy is Proxy2, L1StosInL2Storage\\n{\\n    event ManagershipTransferred(address indexed previousManager, address indexed newManager);\\n\\n    constructor() {\\n        _manager = msg.sender;\\n    }\\n\\n    function renounceManagership() external onlyManager {\\n        emit ManagershipTransferred(_manager, address(0));\\n        _manager = address(0);\\n    }\\n\\n    function transferManagership(address newManager) external onlyManager {\\n        require(newManager != address(0), \\\"new manager is the zero address\\\");\\n        emit ManagershipTransferred(_manager, newManager);\\n        _manager = newManager;\\n    }\\n\\n}\\n\",\"keccak256\":\"0xb6e051045a6b43860bc525cb6e7512616c3aa18e7508a17d602c0f955bc153a2\",\"license\":\"MIT\"},\"contracts/L2/L1StosInL2Storage.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.9;\\n\\ncontract L1StosInL2Storage  {\\n    address public _manager;\\n    address public lockIdNftForRegister;\\n    address public l2CrossDomainMessenger;\\n    address public l1Register;\\n\\n    modifier onlyManager() {\\n        require(_manager == msg.sender, \\\"not manager\\\");\\n        _;\\n    }\\n\\n}\",\"keccak256\":\"0x6860161d1d3bbe291190d031629a5592a062b77505d5e19a78c3600b8cd698fa\",\"license\":\"MIT\"},\"contracts/interfaces/IProxyAction.sol\":{\"content\":\"//SPDX-License-Identifier: Unlicense\\npragma solidity ^0.8.4;\\n\\n\\n/// @title IProxyAction\\ninterface IProxyAction {\\n\\n    /// @dev set the implementation address and status of the proxy[index]\\n    /// @param newImplementation Address of the new implementation.\\n    /// @param _index index\\n    /// @param _alive _alive\\n    function setImplementation2(\\n        address newImplementation,\\n        uint256 _index,\\n        bool _alive\\n    ) external;\\n\\n\\n    /// @dev set alive status of implementation\\n    /// @param newImplementation Address of the new implementation.\\n    /// @param _alive alive status\\n    function setAliveImplementation2(address newImplementation, bool _alive)\\n        external;\\n\\n\\n    /// @dev set selectors of Implementation\\n    /// @param _selectors being added selectors\\n    /// @param _imp implementation address\\n    function setSelectorImplementations2(\\n        bytes4[] calldata _selectors,\\n        address _imp\\n    ) external  ;\\n\\n\\n\\n    /// onlyOwner\\n\\n    /// @notice Set pause state\\n    /// @param _pause true:pause or false:resume\\n    function setProxyPause(bool _pause) external ;\\n\\n\\n    /// anybody\\n\\n    /// @dev view implementation address of selector of function\\n    /// @param _selector selector of function\\n    /// @return impl address of the implementation\\n    function getSelectorImplementation2(bytes4 _selector)\\n        external\\n        view\\n        returns (address impl);\\n\\n\\n    /// @dev view implementation address of the proxy[index]\\n    /// @param _index index of proxy\\n    /// @return address of the implementation\\n    function implementation2(uint256 _index) external view returns (address) ;\\n}\\n\\n\",\"keccak256\":\"0x16ff956d9ccccadd56ce168390a7daa64883fda68f00dbf5110ae67bceaa6fcb\",\"license\":\"Unlicense\"},\"contracts/interfaces/IProxyEvent.sol\":{\"content\":\"//SPDX-License-Identifier: Unlicense\\npragma solidity ^0.8.4;\\n\\n\\n/// @title IProxyEvent\\ninterface IProxyEvent {\\n\\n    event Upgraded(address indexed implementation);\\n\\n    event SetAliveImplementation(address indexed impl, bool alive);\\n    event SetSelectorImplementation(bytes4 indexed selector, address indexed impl);\\n\\n\\n}\\n\",\"keccak256\":\"0x2a1e50808aa448c7a64fdea7ab2a7a2aa614e66ce974cc9e081bb70187716754\",\"license\":\"Unlicense\"},\"contracts/proxy/Proxy2.sol\":{\"content\":\"//SPDX-License-Identifier: Unlicense\\npragma solidity ^0.8.4;\\n\\nimport \\\"./ProxyStorage2.sol\\\";\\n\\nimport {Address} from \\\"@openzeppelin/contracts/utils/Address.sol\\\";\\n\\nimport \\\"../interfaces/IProxyEvent.sol\\\";\\nimport \\\"../interfaces/IProxyAction.sol\\\";\\n// import \\\"hardhat/console.sol\\\";\\n\\ncontract Proxy2 is ProxyStorage2, IProxyEvent, IProxyAction\\n{\\n\\n    /* ========== DEPENDENCIES ========== */\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    modifier onlyOwner() {\\n        require(_owner == msg.sender, \\\"not owner\\\");\\n        _;\\n    }\\n\\n    /* ========== CONSTRUCTOR ========== */\\n    constructor () {\\n        _owner = msg.sender;\\n        emit OwnershipTransferred(address(0), _owner);\\n    }\\n\\n    /* ========== onlyOwner ========== */\\n\\n    function renounceOwnership() external onlyOwner {\\n        emit OwnershipTransferred(_owner, address(0));\\n        _owner = address(0);\\n    }\\n\\n    function transferOwnership(address newOwner) external onlyOwner {\\n        require(newOwner != address(0), \\\"new owner is the zero address\\\");\\n        emit OwnershipTransferred(_owner, newOwner);\\n        _owner = newOwner;\\n    }\\n\\n    /// @inheritdoc IProxyAction\\n    function setProxyPause(bool _pause) external onlyOwner {\\n        pauseProxy = _pause;\\n    }\\n\\n    /// @notice Set implementation contract\\n    /// @param impl New implementation contract address\\n    function upgradeTo(address impl) external onlyOwner {\\n        require(impl != address(0), \\\"input is zero\\\");\\n        require(\\n            _implementation2(0) != impl,\\n            \\\"same addr\\\"\\n        );\\n        _setImplementation2(impl, 0, true);\\n        emit Upgraded(impl);\\n    }\\n\\n    /**\\n     * @notice Set the implementation and call a function in a single transaction. Useful to ensure\\n     *         atomic execution of initialization-based upgrades.\\n     *\\n     * @param _implementation Address of the implementation contract.\\n     * @param _data           Calldata to delegatecall the new implementation with.\\n     */\\n    function upgradeToAndCall(address _implementation, bytes calldata _data)\\n        public\\n        payable\\n        virtual\\n        onlyOwner\\n        returns (bytes memory)\\n    {\\n        // _setImplementation(_implementation);\\n        _setImplementation2(_implementation, 0, true);\\n\\n        (bool success, bytes memory returndata) = _implementation.delegatecall(_data);\\n        require(success, \\\"Proxy: delegatecall to new implementation contract failed\\\");\\n        return returndata;\\n    }\\n\\n    /// @inheritdoc IProxyAction\\n    function setImplementation2(\\n        address newImplementation,\\n        uint256 _index,\\n        bool _alive\\n    ) external override onlyOwner {\\n        _setImplementation2(newImplementation, _index, _alive);\\n    }\\n\\n    /// @inheritdoc IProxyAction\\n    function setAliveImplementation2(address newImplementation, bool _alive)\\n        public override onlyOwner\\n    {\\n        _setAliveImplementation2(newImplementation, _alive);\\n    }\\n\\n    /// @inheritdoc IProxyAction\\n    function setSelectorImplementations2(\\n        bytes4[] calldata _selectors,\\n        address _imp\\n    ) public override onlyOwner {\\n        require(\\n            _selectors.length > 0,\\n            \\\"Proxy: _selectors's size is zero\\\"\\n        );\\n        require(aliveImplementation[_imp], \\\"Proxy: _imp is not alive\\\");\\n\\n        for (uint256 i = 0; i < _selectors.length; i++) {\\n            require(\\n                selectorImplementation[_selectors[i]] != _imp,\\n                \\\"LiquidityVaultProxy: same imp\\\"\\n            );\\n            selectorImplementation[_selectors[i]] = _imp;\\n            emit SetSelectorImplementation(_selectors[i], _imp);\\n        }\\n    }\\n\\n    /* ========== Anyone can   ========== */\\n\\n\\n\\n    /* ========== VIEW ========== */\\n\\n    /// @dev returns the implementation\\n    function implementation() external view returns (address) {\\n        return _implementation2(0);\\n    }\\n\\n    /// @inheritdoc IProxyAction\\n    function implementation2(uint256 _index) external override view returns (address) {\\n        return _implementation2(_index);\\n    }\\n\\n\\n    /// @inheritdoc IProxyAction\\n    function getSelectorImplementation2(bytes4 _selector)\\n        public override\\n        view\\n        returns (address impl)\\n    {\\n        if (selectorImplementation[_selector] == address(0))\\n            return proxyImplementation[0];\\n        else if (aliveImplementation[selectorImplementation[_selector]]){\\n            return selectorImplementation[_selector];\\n        }\\n        else return proxyImplementation[0];\\n    }\\n\\n\\n    /// @dev receive ether\\n    receive() external payable {\\n        revert(\\\"cannot receive Ether\\\");\\n    }\\n\\n    /// @dev fallback function , execute on undefined function call\\n    fallback() external payable {\\n        _fallback();\\n    }\\n\\n    /* === ======= internal ========== */\\n\\n    /// @dev view implementation address of the proxy[index]\\n    /// @param _index index of proxy\\n    /// @return impl address of the implementation\\n    function _implementation2(uint256 _index)\\n        internal\\n        view\\n        returns (address impl)\\n    {\\n        return proxyImplementation[_index];\\n    }\\n\\n    /// @dev fallback function , execute on undefined function call\\n    function _fallback() internal {\\n        address _impl = getSelectorImplementation2(msg.sig);\\n\\n        require(\\n            _impl != address(0) && !pauseProxy,\\n            \\\"Proxy: impl OR proxy is false\\\"\\n        );\\n\\n        assembly {\\n            // Copy msg.data. We take full control of memory in this inline assembly\\n            // block because it will not return to Solidity code. We overwrite the\\n            // Solidity scratch pad at memory position 0.\\n            calldatacopy(0, 0, calldatasize())\\n\\n            // Call the implementation.\\n            // out and outsize are 0 because we don't know the size yet.\\n            let result := delegatecall(gas(), _impl, 0, calldatasize(), 0, 0)\\n\\n            // Copy the returned data.\\n            returndatacopy(0, 0, returndatasize())\\n\\n            switch result\\n                // delegatecall returns 0 on error.\\n                case 0 {\\n                    revert(0, returndatasize())\\n                }\\n                default {\\n                    return(0, returndatasize())\\n                }\\n        }\\n    }\\n\\n    /// @dev set the implementation address and status of the proxy[index]\\n    /// @param newImplementation Address of the new implementation.\\n    /// @param _index index of proxy\\n    /// @param _alive alive status\\n    function _setImplementation2(\\n        address newImplementation,\\n        uint256 _index,\\n        bool _alive\\n    ) internal {\\n        require(\\n            Address.isContract(newImplementation),\\n            \\\"Proxy: not contract address\\\"\\n        );\\n        if (_alive) proxyImplementation[_index] = newImplementation;\\n        _setAliveImplementation2(newImplementation, _alive);\\n    }\\n\\n    /// @dev set alive status of implementation\\n    /// @param newImplementation Address of the new implementation.\\n    /// @param _alive alive status\\n    function _setAliveImplementation2(address newImplementation, bool _alive)\\n        internal\\n    {\\n        aliveImplementation[newImplementation] = _alive;\\n        emit SetAliveImplementation(newImplementation, _alive);\\n    }\\n\\n}\",\"keccak256\":\"0x7d0a7c4411d5aba121d4afe73effde4df0c418aa2a3be22400058104ec1fab50\",\"license\":\"Unlicense\"},\"contracts/proxy/ProxyStorage2.sol\":{\"content\":\"//SPDX-License-Identifier: Unlicense\\npragma solidity ^0.8.4;\\n\\ncontract ProxyStorage2  {\\n\\n    address public _owner;\\n    bool public pauseProxy;\\n\\n    mapping(uint256 => address) public proxyImplementation;\\n    mapping(address => bool) public aliveImplementation;\\n    mapping(bytes4 => address) public selectorImplementation;\\n\\n\\n}\",\"keccak256\":\"0x143792b4a69ee77d8ac3bf521938acc34f9e6800751d4db9bae90333b4749a4a\",\"license\":\"Unlicense\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "getSelectorImplementation2(bytes4)": {
        "details": "view implementation address of selector of function",
        "params": {
          "_selector": "selector of function"
        },
        "returns": {
          "impl": "address of the implementation"
        }
      },
      "implementation()": {
        "details": "returns the implementation"
      },
      "implementation2(uint256)": {
        "details": "view implementation address of the proxy[index]",
        "params": {
          "_index": "index of proxy"
        },
        "returns": {
          "_0": "address of the implementation"
        }
      },
      "setAliveImplementation2(address,bool)": {
        "details": "set alive status of implementation",
        "params": {
          "_alive": "alive status",
          "newImplementation": "Address of the new implementation."
        }
      },
      "setImplementation2(address,uint256,bool)": {
        "details": "set the implementation address and status of the proxy[index]",
        "params": {
          "_alive": "_alive",
          "_index": "index",
          "newImplementation": "Address of the new implementation."
        }
      },
      "setProxyPause(bool)": {
        "params": {
          "_pause": "true:pause or false:resume"
        }
      },
      "setSelectorImplementations2(bytes4[],address)": {
        "details": "set selectors of Implementation",
        "params": {
          "_imp": "implementation address",
          "_selectors": "being added selectors"
        }
      },
      "upgradeTo(address)": {
        "params": {
          "impl": "New implementation contract address"
        }
      },
      "upgradeToAndCall(address,bytes)": {
        "params": {
          "_data": "Calldata to delegatecall the new implementation with.",
          "_implementation": "Address of the implementation contract."
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "setProxyPause(bool)": {
        "notice": "Set pause state"
      },
      "upgradeTo(address)": {
        "notice": "Set implementation contract"
      },
      "upgradeToAndCall(address,bytes)": {
        "notice": "Set the implementation and call a function in a single transaction. Useful to ensure         atomic execution of initialization-based upgrades."
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 1673,
        "contract": "contracts/L2/L1StosInL2Proxy.sol:L1StosInL2Proxy",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 1675,
        "contract": "contracts/L2/L1StosInL2Proxy.sol:L1StosInL2Proxy",
        "label": "pauseProxy",
        "offset": 20,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 1679,
        "contract": "contracts/L2/L1StosInL2Proxy.sol:L1StosInL2Proxy",
        "label": "proxyImplementation",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_uint256,t_address)"
      },
      {
        "astId": 1683,
        "contract": "contracts/L2/L1StosInL2Proxy.sol:L1StosInL2Proxy",
        "label": "aliveImplementation",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 1687,
        "contract": "contracts/L2/L1StosInL2Proxy.sol:L1StosInL2Proxy",
        "label": "selectorImplementation",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_bytes4,t_address)"
      },
      {
        "astId": 750,
        "contract": "contracts/L2/L1StosInL2Proxy.sol:L1StosInL2Proxy",
        "label": "_manager",
        "offset": 0,
        "slot": "4",
        "type": "t_address"
      },
      {
        "astId": 752,
        "contract": "contracts/L2/L1StosInL2Proxy.sol:L1StosInL2Proxy",
        "label": "lockIdNftForRegister",
        "offset": 0,
        "slot": "5",
        "type": "t_address"
      },
      {
        "astId": 754,
        "contract": "contracts/L2/L1StosInL2Proxy.sol:L1StosInL2Proxy",
        "label": "l2CrossDomainMessenger",
        "offset": 0,
        "slot": "6",
        "type": "t_address"
      },
      {
        "astId": 756,
        "contract": "contracts/L2/L1StosInL2Proxy.sol:L1StosInL2Proxy",
        "label": "l1Register",
        "offset": 0,
        "slot": "7",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes4": {
        "encoding": "inplace",
        "label": "bytes4",
        "numberOfBytes": "4"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_bytes4,t_address)": {
        "encoding": "mapping",
        "key": "t_bytes4",
        "label": "mapping(bytes4 => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_mapping(t_uint256,t_address)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}